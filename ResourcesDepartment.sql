create database ResourcesDepartment
use ResourcesDepartment
go

/*
create table Воинский_учёт
(
	Код_воинского_учёта int not null primary key IDENTITY(1,1),
	Группа учета varchar(50),
	Категория учета varchar(50),
	Состав_профиль varchar(50),
	Воинское_звание varchar(50),
	Военно_учетная_специальность_номер varchar(30),
	Категория_годности_к_военной_службе varchar(20),
	Название_райвоенкомата_по_месту_регистраци varchar(100),
	Состоит_на_специальном_воинском_учете_номер varchar(50),
)
go


create table Звание
(
	Код_звания int not null primary key IDENTITY(1,1),
	Звание varchar(30)
)
go

create table Состав
(
	Код_состава int not null primary key IDENTITY(1,1),
	Состав varchar(30)
)
go
*/

create table Сотрудник
(
	Код_сотрудника int not null primary key IDENTITY(1,1),
	Фамилия varchar(30),
	Имя varchar(30),
	Отчество varchar(30) not null,
	Дата_рождения date not null,
	Страна_рождения varchar(30) not null,
	Город_рождения varchar(30) not null,
	Гражданство varchar(30) not null,
	Серия_номер_паспорта varchar(9) not null unique,
	Идентификационный_номер varchar(14) not null unique,
	Дата_выдачи_паспорта date not null,
	Кем_выдан_паспорт varchar(60) not null,
	Город_фактического_проживания varchar(30) not null,
	Улица_фактического_проживания varchar(40) not null,
	Дом_фактического_проживания varchar(5) not null,
	Квартира_фактического_проживания varchar(3),
	Город_регистрации varchar(30) not null, 
	Улица_регистрации varchar(40) not null,
	Дом_регистрации varchar(5) not null,
	Квартира_регистрации varchar(5),
	Мобильный_телефон varchar(50) unique not null,
	Пол varchar(7) not null,
	Семейное_положение varchar(20) not null,
	Состояние varchar(9) not null,
	Состояние2 varchar(30),
	Группа_учета varchar(50),
	Категория_учета varchar(50),
	Состав_профиль varchar(50),
	Воинское_звание varchar(50),
	Военно_учетная_специальность_номер varchar(30),
	Категория_годности_к_военной_службе varchar(20),
	Название_райвоенкомата_по_месту_регистраци varchar(100),
	Состоит_на_специальном_воинском_учете_номер varchar(50),
	Код_специалиста_по_кадрам int not null
)
go

create table Специалист_по_кадрам
(
	Код_специалиста_по_кадрам int not null primary key IDENTITY(1,1),
	Фамилия varchar(30),
	Имя varchar(30),
	Логин varchar(30),
	Пароль varchar(30)
)

create table Перевод
(
	Код_назначения_и_перевода int not null primary key IDENTITY(1,1),
	Дата date not null,
	Перевод_с date,
	Основание varchar(50),
	Код_штатного_расписания int not null,
	Код_сотрудника int not null
)	
go

create table Состав_семьи
(
	Код_состава_семьи int not null primary key IDENTITY(1,1),
	Фамилия varchar(30),
	Имя varchar(30),
	Отчество varchar(30) not null,
	Дата_рождения date not null,
	Код_сотрудника int not null,
	Код_степени_родства int not null
)
go

create table Степень_родства
(
	Код_степени_родства int not null primary key IDENTITY(1,1),
	Степень_родства varchar(30)
)
go

create table Отпуск
(
	Код_отпуска int not null primary key IDENTITY(1,1),
	Вид_отпуска varchar(40),
	За_период_с date,
	За_период_по date,
	Отпуск_с date not null,
	Отпуск_по date,
	Количество_дней_отпуска int not null,
	Основание_на_отпуск varchar(50) not null,
	Примечание varchar(50) not null,
	Код_сотрудника int not null,
	Дата date not null
)
go


create table Увольнение
(
	Код_увольнения int not null primary key IDENTITY(1,1),
	Дата date not null,
	Основание varchar(50) not null,
	Код_сотрудника int not null,
	Код_штатного_расписания int not null
)
go


create table Образование
(
	Код_образования int not null primary key IDENTITY(1,1),
	Образовательное_учреждение varchar(MAX) not null,
	Дата_окончания date not null,
	Система_образования varchar(50) not null,
	Номер_диплома varchar(40),
	Дата_выдачи date,
	Специальность_по_образованию varchar(50),
	Квалификация_по_диплому varchar(50),
	Код_сотрудника int not null

)
go


create table Трудовой_договор
(
	Код_трудового_договора int not null primary key IDENTITY(1,1),
	Дата date not null,
	Дата_окончания date,
	Вид_договора varchar(50) not null,
	Срок varchar(50) not null,
	Испытательный_срок varchar(40) not null,
	Испытательный_срок_с date,
	Испытательный_срок_по date,
	Код_сотрудника int not null,
	Состояние varchar(12),
	Оклад int,
	Ставка float not null,
	Код_штатного_расписания int not null

)
go

create table Штатное_расписание
(
	Код_штатного_расписания int not null primary key IDENTITY(1,1),
	Название_должности varchar(50) not null,
	Количество_сотрудников float,
	Оклад int not null,	
	Код_отдела int not null
)
go

create table Отдел
(
	Код_отдела int not null primary key IDENTITY(1,1),
	Название_отдела varchar(50) not null	
)
go

create table Командировка
(
	Код_командировки int not null primary key IDENTITY(1,1),
	Страна varchar(30) not null,
	Область varchar(30) not null,
	Город varchar(30) not null,
	Дата_с date not null,
	Дата_по date,
	Срок int,
	Цель varchar(30) not null,
	Основание varchar(30) not null,
	Код_сотрудника int,
	Дата date not null
)
go


create table Поощрение
(
	Код_поощрения int not null primary key IDENTITY(1,1),
	Мотив varchar(30) not null,
	Вид_поощрения varchar(30) not null,
	Сумма float,
	Дата date not null,
	Основание varchar(30) not null,
	Код_сотрудника int not null
)
go


create table Место_предыдущей_работы
(
	Код_предыдущей_работы int not null primary key IDENTITY(1,1),
	Устроился date not null,
	Уволился date not null,
	Вид_деятельности varchar(50) not null,
	Основание_увольнения varchar(50) not null,
	Должность varchar(30) not null,
	Организация varchar(50) not null,
	Код_сотрудника int not null
)
go




alter table Перевод
add constraint FK_Перевод_To_Сотрудник FOREIGN KEY(Код_сотрудника) REFERENCES Сотрудник(Код_сотрудника)
go

alter table Увольнение
add constraint FK_Увольнение_To_Сотрудник FOREIGN KEY(Код_сотрудника) REFERENCES Сотрудник(Код_сотрудника)
go

alter table Перевод
add constraint FK_Перевод_To_Штатное_расписание FOREIGN KEY(Код_штатного_расписания) REFERENCES Штатное_расписание(Код_штатного_расписания)
go

alter table Состав_семьи
add constraint FK_Состав_семьи_To_Сотрудник FOREIGN KEY(Код_сотрудника) REFERENCES Сотрудник(Код_сотрудника)
go

alter table Состав_семьи
add constraint FK_Состав_семьи_To_Степень_родства FOREIGN KEY(Код_степени_родства) REFERENCES Степень_родства(Код_степени_родства)
go

/*
alter table Воинский_учёт
add constraint FK_Воинский_учёт_To_Сотрудник FOREIGN KEY(Код_сотрудника) REFERENCES Сотрудник(Код_сотрудника)
go

alter table Воинский_учёт
add constraint FK_Воинский_учёт_To_Звание FOREIGN KEY(Код_звания) REFERENCES Звание(Код_звания)
go

alter table Воинский_учёт
add constraint FK_Воинский_учёт_To_Состав FOREIGN KEY(Код_состава) REFERENCES Состав(Код_состава)
go
*/
alter table Отпуск
add constraint FK_Отпуск_To_Сотрудник FOREIGN KEY(Код_сотрудника) REFERENCES Сотрудник(Код_сотрудника)
go

alter table Образование
add constraint FK_Образование_To_Сотрудник FOREIGN KEY(Код_сотрудника) REFERENCES Сотрудник(Код_сотрудника)
go


alter table Трудовой_договор
add constraint FK_Трудовой_договор_To_Штатное_расписание FOREIGN KEY(Код_штатного_расписания) REFERENCES Штатное_расписание(Код_штатного_расписания) 
go

alter table Увольнение
add constraint FK_Увольнение_To_Штатное_расписание FOREIGN KEY(Код_штатного_расписания) REFERENCES Штатное_расписание(Код_штатного_расписания) 
go

alter table Сотрудник
add constraint FK_Сотрудник_To_Специалист_по_кадрам FOREIGN KEY(Код_специалиста_по_кадрам) REFERENCES Специалист_по_кадрам(Код_специалиста_по_кадрам) 
go

alter table Командировка
add constraint FK_Командировка_To_Сотрудник FOREIGN KEY(Код_сотрудника) REFERENCES Сотрудник(Код_сотрудника) 
go

alter table Трудовой_договор
add constraint FK_Трудовой_договор_To_Сотрудник FOREIGN KEY(Код_сотрудника) REFERENCES Сотрудник(Код_сотрудника) 
go

alter table Штатное_расписание
add constraint FK_Штатное_расписание_To_Отдел FOREIGN KEY(Код_отдела) REFERENCES Отдел(Код_отдела) 
go

alter table Поощрение
add constraint FK_Поощрение_To_Сотрудник FOREIGN KEY(Код_сотрудника) REFERENCES Сотрудник(Код_сотрудника) 
go

alter table Место_предыдущей_работы
add constraint FK_Место_предыдущей_работы_To_Сотрудник FOREIGN KEY(Код_сотрудника) REFERENCES Сотрудник(Код_сотрудника) 
go







CREATE VIEW Сотрудники_view
AS
SELECT
Фамилия, Имя, Отчество, Дата_рождения, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта,
Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания,
Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Пол, Семейное_положение, Код_специалиста_по_кадрам, Код_сотрудника
FROM
Сотрудник
where Состояние = 'Сотрудник'
go

CREATE VIEW Кандидаты_view
AS
SELECT
Фамилия, Имя, Отчество, Дата_рождения, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта,
Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания,
Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Пол, Семейное_положение, Код_специалиста_по_кадрам, Код_сотрудника
FROM
Сотрудник
where Состояние = 'Кандидат'
go

CREATE VIEW Уволенные_view
AS
SELECT
Фамилия, Имя, Отчество, Дата_рождения, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта,
Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания,
Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Пол, Семейное_положение, Код_специалиста_по_кадрам, Код_сотрудника
FROM
Сотрудник
where Состояние = 'Уволен'
go


CREATE VIEW Кандидаты_уволенные_view
AS
SELECT
Фамилия, Имя, Отчество, Дата_рождения, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта,
Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, 
Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Пол, Семейное_положение, Код_специалиста_по_кадрам, Код_сотрудника
FROM
Сотрудник
where Состояние = 'Кандидат' or Состояние = 'Уволен'
go



CREATE PROCEDURE [dbo].[Образование_id]
@id int
AS
SELECT
Код_образования, Образовательное_учреждение, Дата_окончания, Система_образования, Номер_диплома, Дата_выдачи, Специальность_по_образованию, Квалификация_по_диплому, Сотрудник.Код_сотрудника
FROM
Образование
join Сотрудник on Сотрудник.Код_сотрудника = Образование.Код_сотрудника
where Образование.Код_сотрудника = @id
GO

CREATE PROCEDURE [dbo].[Состав_семьи_id]
@id int
AS
SELECT
Код_состава_семьи, Имя, Фамилия, Отчество, Дата_рождения, Код_сотрудника, Степень_родства.Код_степени_родства, Степень_родства.Степень_родства
FROM
Состав_семьи
join Степень_родства on Степень_родства.Код_степени_родства = Состав_семьи.Код_степени_родства
where Состав_семьи.Код_сотрудника = @id
GO



CREATE VIEW Штатное_расписание_view
AS
SELECT
Код_штатного_расписания ,Название_должности, Количество_сотрудников, Название_отдела, Отдел.Код_отдела, Оклад 
FROM
Штатное_расписание
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
go


CREATE VIEW Отпуск_view
AS
SELECT
 Код_отпуска, Сотрудник.Код_сотрудника, Вид_отпуска, За_период_с, За_период_по, Отпуск_с, Отпуск_по, Количество_дней_отпуска, Основание_на_отпуск, Примечание, Сотрудник.Имя,
 Сотрудник.Фамилия, Сотрудник.Отчество, Отпуск.Дата
FROM
Отпуск
join Сотрудник on Отпуск.Код_сотрудника = Сотрудник.Код_сотрудника
go

CREATE VIEW Командировка_view
AS
SELECT
Код_командировки, Сотрудник.Код_сотрудника, Страна, Область, Город, Дата_с, Дата_по, Срок, Цель, Основание, Командировка.Дата, Сотрудник.Имя, Сотрудник.Фамилия, Сотрудник.Отчество
FROM
Командировка
join Сотрудник on Сотрудник.Код_сотрудника = Командировка.Код_сотрудника
go


CREATE VIEW Перевод_view
AS
SELECT
Код_назначения_и_перевода, Штатное_расписание.Код_штатного_расписания, Сотрудник.Код_сотрудника , Перевод.Дата, Перевод.Перевод_с, Перевод.Основание, Сотрудник.Имя,
Сотрудник.Фамилия, Сотрудник.Отчество, Штатное_расписание.Название_должности, Отдел.Название_отдела, Отдел.Код_отдела
FROM
Перевод
join Сотрудник on Сотрудник.Код_сотрудника = Перевод.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Перевод.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
go


CREATE VIEW Место_предыдущей_работы_view
AS
SELECT
 Код_предыдущей_работы, Сотрудник.Код_сотрудника, Устроился, Уволился, Вид_деятельности, Основание_увольнения, Должность, Организация
FROM
Место_предыдущей_работы
join Сотрудник on Место_предыдущей_работы.Код_сотрудника = Сотрудник.Код_сотрудника
go

CREATE VIEW Поощрение_view
AS
SELECT
 Код_поощрения, Сотрудник.Код_сотрудника, Мотив, Вид_поощрения, Сумма, Поощрение.Дата, Основание, Сотрудник.Имя, Сотрудник.Фамилия, Сотрудник.Отчество
FROM
Поощрение
join Сотрудник on Сотрудник.Код_сотрудника = Поощрение.Код_сотрудника
go





CREATE VIEW Увольнения_view
AS
SELECT
Код_увольнения, Увольнение.Дата, Имя, Фамилия, Отчество, Основание, Сотрудник.Код_сотрудника, Штатное_расписание.Код_штатного_расписания, Штатное_расписание.Название_должности, Отдел.Название_отдела
FROM
Увольнение
join Сотрудник on Сотрудник.Код_сотрудника = Увольнение.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Увольнение.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
go


CREATE VIEW Трудовые_view
AS
SELECT
Трудовой_договор.Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_трудового_договора, Сотрудник.Код_сотрудника, Штатное_расписание.Код_штатного_расписания, Сотрудник.Имя,
Сотрудник.Фамилия, Сотрудник.Отчество, Отдел.Код_отдела, Отдел.Название_отдела, Штатное_расписание.Название_должности
FROM
Трудовой_договор
join Сотрудник on Сотрудник.Код_сотрудника = Трудовой_договор.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Трудовой_договор.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
go

CREATE VIEW Трудовые_действующие_view
AS
SELECT
Трудовой_договор.Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_трудового_договора, Сотрудник.Код_сотрудника, Штатное_расписание.Код_штатного_расписания, Сотрудник.Имя,
Сотрудник.Фамилия, Сотрудник.Отчество, Отдел.Код_отдела, Отдел.Название_отдела, Штатное_расписание.Название_должности
FROM
Трудовой_договор
join Сотрудник on Сотрудник.Код_сотрудника = Трудовой_договор.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Трудовой_договор.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
where Трудовой_договор.Состояние = 'Действует'
go

CREATE VIEW Трудовые_не_действующие_view
AS
SELECT
Трудовой_договор.Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_трудового_договора, Сотрудник.Код_сотрудника, Штатное_расписание.Код_штатного_расписания, Сотрудник.Имя,
Сотрудник.Фамилия, Сотрудник.Отчество, Отдел.Код_отдела, Отдел.Название_отдела, Штатное_расписание.Название_должности
FROM
Трудовой_договор
join Сотрудник on Сотрудник.Код_сотрудника = Трудовой_договор.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Трудовой_договор.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
where Трудовой_договор.Состояние = 'Не действует'
go




create trigger triggerafterinsertsalary on Трудовой_договор
after insert
as
begin
	declare @id int
	declare @salary int
	declare @rate float
	set @id = (select inserted.Код_штатного_расписания from inserted)
	set @salary = (select Оклад from Штатное_расписание where Штатное_расписание.Код_штатного_расписания = @id)
	set @rate = (select inserted.Ставка from inserted)
	update Трудовой_договор
	set Оклад = @salary * @rate
	where Код_трудового_договора = (select inserted.Код_трудового_договора from inserted)
end
go




create trigger SetDateend on Отпуск
after insert
as
begin
	declare @day int
	declare @date date
	set @day = (select inserted.Количество_дней_отпуска from inserted)
	set @date = (select inserted.Отпуск_с from inserted)
	update Отпуск
	set Отпуск_по = (select DATEADD(day, @day, @date))
	where Код_отпуска = (select inserted.Код_отпуска from inserted)
end
go


create trigger TripSetDateend on Командировка
after insert
as
begin
	declare @day int
	declare @date date
	set @day = (select inserted.Срок from inserted)
	set @date = (select inserted.Дата_с from inserted)
	update Командировка
	set Дата_по = (select DATEADD(day, @day, @date))
	where Код_командировки = (select inserted.Код_командировки from inserted)
end
go

create trigger SetConditionafterinserEmployee on Сотрудник
after insert
as
begin
	update Сотрудник
	set Состояние = 'Кандидат'
	where Код_сотрудника = (select inserted.Код_сотрудника from inserted)
end
go

create trigger SetConditionafterinsertcontract on Трудовой_договор
after insert
as
begin
	update Сотрудник
	set Состояние = 'Сотрудник'
	where Код_сотрудника = (select inserted.Код_сотрудника from inserted)
end
go

/*
create trigger update_staff on Трудовой_договор
after insert
as
begin
	update Штатное_расписание
	set Количество_сотрудников = Количество_сотрудников + 1
	where Код_штатного_расписания = (select inserted.Код_штатного_расписания from inserted)
end
go
*/

/*
create trigger update_staff_salary on Трудовой_договор
after insert
as
begin
	update Штатное_расписание
	set Оклад_с_учётом_штатной_численности = Оклад * Количество_сотрудников
	where Код_штатного_расписания = (select inserted.Код_штатного_расписания from inserted)
end
go
*/

/*
CREATE FUNCTION dbo.ufn_FindReports(@id int)  
RETURNS int   
AS   
BEGIN   
	DECLARE @day int;
    SELECT @day = (select SUM(DATEDIFF(day, Место_предыдущей_работы.Устроился, Место_предыдущей_работы.Уволился)) from Место_предыдущей_работы where Код_сотрудника = @id)
    FROM Место_предыдущей_работы p		
    WHERE p.Код_сотрудника = @id  
	Group by Код_предыдущей_работы
    RETURN @day;  
END; 
go
*/


CREATE PROCEDURE [dbo].[filterholiday]
@date1 date,
@date2 date
AS
SELECT
Код_отпуска, Сотрудник.Код_сотрудника, Вид_отпуска, За_период_с, За_период_по, Отпуск_с, Отпуск_по, Количество_дней_отпуска, Основание_на_отпуск, Примечание, Сотрудник.Имя,
 Сотрудник.Фамилия, Сотрудник.Отчество, Отпуск.Дата
FROM
Отпуск
join Сотрудник on Отпуск.Код_сотрудника = Сотрудник.Код_сотрудника
where Отпуск.Дата between @date1 and @date2
GO


CREATE PROCEDURE [dbo].[filterbusinestripdate]
@date1 date,
@date2 date
AS
SELECT
Код_командировки, Сотрудник.Код_сотрудника, Страна, Область, Город, Дата_с, Дата_по, Срок, Цель, Основание, Командировка.Дата, Сотрудник.Имя, Сотрудник.Фамилия, Сотрудник.Отчество
FROM
Командировка
join Сотрудник on Сотрудник.Код_сотрудника = Командировка.Код_сотрудника
where Командировка.Дата between @date1 and @date2
GO


CREATE PROCEDURE [dbo].[filtertransferdate]
@date1 date,
@date2 date
AS
SELECT
Код_назначения_и_перевода, Штатное_расписание.Код_штатного_расписания, Сотрудник.Код_сотрудника , Перевод.Дата, Перевод.Перевод_с, Перевод.Основание, Сотрудник.Имя,
Сотрудник.Фамилия, Сотрудник.Отчество, Штатное_расписание.Название_должности, Отдел.Название_отдела, Отдел.Код_отдела
FROM
Перевод
join Сотрудник on Сотрудник.Код_сотрудника = Перевод.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Перевод.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
where Перевод.Дата between @date1 and @date2
GO


CREATE PROCEDURE [dbo].[filterpromotiondate]
@date1 date,
@date2 date
AS
SELECT
Код_поощрения, Сотрудник.Код_сотрудника, Мотив, Вид_поощрения, Сумма, Поощрение.Дата, Основание, Сотрудник.Имя, Сотрудник.Фамилия, Сотрудник.Отчество
FROM
Поощрение
join Сотрудник on Сотрудник.Код_сотрудника = Поощрение.Код_сотрудника
where Поощрение.Дата between @date1 and @date2
GO


CREATE PROCEDURE [dbo].[filterfireddate]
@date1 date,
@date2 date
AS
SELECT
Код_увольнения, Увольнение.Дата, Имя, Фамилия, Отчество, Основание, Сотрудник.Код_сотрудника, Штатное_расписание.Код_штатного_расписания, Штатное_расписание.Название_должности, Отдел.Название_отдела
FROM
Увольнение
join Сотрудник on Сотрудник.Код_сотрудника = Увольнение.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Увольнение.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
where Увольнение.Дата between @date1 and @date2
GO

CREATE PROCEDURE [dbo].[filterorderdate]
@date1 date,
@date2 date
AS
SELECT
Трудовой_договор.Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_трудового_договора, Сотрудник.Код_сотрудника, Штатное_расписание.Код_штатного_расписания, Сотрудник.Имя,
Сотрудник.Фамилия, Сотрудник.Отчество, Отдел.Код_отдела, Отдел.Название_отдела, Штатное_расписание.Название_должности
FROM
Трудовой_договор
join Сотрудник on Сотрудник.Код_сотрудника = Трудовой_договор.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Трудовой_договор.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
where Трудовой_договор.Дата between @date1 and @date2
GO


CREATE PROCEDURE [dbo].[report1]
@id int,
@date1 date,
@date2 date
AS
SELECT
Сотрудник.Фамилия, Сотрудник.Имя, Сотрудник.Отчество, Трудовой_договор.Дата as Дата_трудоустройства, Штатное_расписание.Название_должности, Отдел.Название_отдела
FROM
Трудовой_договор
join Сотрудник on Сотрудник.Код_сотрудника = Трудовой_договор.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Трудовой_договор.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
where Трудовой_договор.Код_штатного_расписания = @id and Трудовой_договор.Дата between @date1 and @date2
GO




CREATE PROCEDURE [dbo].[report2]
@id int,
@date1 date,
@date2 date
AS
SELECT
Сотрудник.Фамилия, Сотрудник.Имя, Сотрудник.Отчество, Увольнение.Дата as Дата_увольнения, Штатное_расписание.Название_должности, Отдел.Название_отдела
FROM
Увольнение
join Сотрудник on Сотрудник.Код_сотрудника = Увольнение.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Увольнение.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
where Увольнение.Код_штатного_расписания = @id and Увольнение.Дата between @date1 and @date2
GO




CREATE PROCEDURE [dbo].[searchempl]
@textbox varchar(50)
AS
SELECT Фамилия, Имя, Отчество, Дата_рождения, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта,
Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания,
Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Пол, Семейное_положение, Код_сотрудника
FROM Сотрудник
where Фамилия LIKE '%'+@textbox+'%' or 
Имя LIKE '%'+@textbox+'%' or
Отчество LIKE '%'+@textbox+'%' or
Страна_рождения LIKE '%'+@textbox+'%' or
Дата_рождения LIKE '%'+@textbox+'%' or
Страна_рождения LIKE '%'+@textbox+'%' or
Город_рождения LIKE '%'+@textbox+'%' or
Серия_номер_паспорта LIKE '%'+@textbox+'%' or
Идентификационный_номер LIKE '%'+@textbox+'%' or
Страна_рождения LIKE '%'+@textbox+'%'
GO

CREATE PROCEDURE [dbo].[searchstafdepartment]
@textbox varchar(50)
AS
SELECT Код_штатного_расписания ,Название_должности, Количество_сотрудников, Название_отдела, Отдел.Код_отдела
FROM Штатное_расписание
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
where Название_отдела LIKE '%'+@textbox+'%'
GO

CREATE PROCEDURE [dbo].[searchstafposition]
@textbox varchar(50)
AS
SELECT Код_штатного_расписания ,Название_должности, Количество_сотрудников, Название_отдела, Отдел.Код_отдела
FROM Штатное_расписание
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
where Название_должности LIKE '%'+@textbox+'%'
GO

CREATE PROCEDURE [dbo].[searchholiday]
@textbox varchar(50)
AS
SELECT Код_отпуска, Сотрудник.Код_сотрудника, Вид_отпуска, За_период_с, За_период_по, Отпуск_с, Отпуск_по, Количество_дней_отпуска, Основание_на_отпуск, Примечание, Сотрудник.Имя,
 Сотрудник.Фамилия, Сотрудник.Отчество, Отпуск.Дата
 from Отпуск
 join Сотрудник on Отпуск.Код_сотрудника = Сотрудник.Код_сотрудника
where Сотрудник.Фамилия LIKE '%'+@textbox+'%' or
Сотрудник.Имя LIKE '%'+@textbox+'%' or
Сотрудник.Отчество LIKE '%'+@textbox+'%'
GO

CREATE PROCEDURE [dbo].[searchbusinestrip]
@textbox varchar(50)
AS
SELECT Код_командировки, Сотрудник.Код_сотрудника, Страна, Область, Город, Дата_с, Дата_по, Срок, Цель, Основание, Командировка.Дата, Сотрудник.Имя, Сотрудник.Фамилия, Сотрудник.Отчество
FROM
Командировка
join Сотрудник on Сотрудник.Код_сотрудника = Командировка.Код_сотрудника
where Сотрудник.Фамилия LIKE '%'+@textbox+'%' or
Сотрудник.Имя LIKE '%'+@textbox+'%' or
Сотрудник.Отчество LIKE '%'+@textbox+'%'
GO

CREATE PROCEDURE [dbo].[searchtransfer]
@textbox varchar(50)
AS
SELECT Код_назначения_и_перевода, Штатное_расписание.Код_штатного_расписания, Сотрудник.Код_сотрудника , Перевод.Дата, Перевод.Перевод_с, Перевод.Основание, Сотрудник.Имя,
Сотрудник.Фамилия, Сотрудник.Отчество, Штатное_расписание.Название_должности, Отдел.Название_отдела, Отдел.Код_отдела
FROM
Перевод
join Сотрудник on Сотрудник.Код_сотрудника = Перевод.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Перевод.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
where Сотрудник.Фамилия LIKE '%'+@textbox+'%' or
Сотрудник.Имя LIKE '%'+@textbox+'%' or
Сотрудник.Отчество LIKE '%'+@textbox+'%' or
Штатное_расписание.Название_должности LIKE '%'+@textbox+'%' or
Отдел.Название_отдела LIKE '%'+@textbox+'%' 
GO

CREATE PROCEDURE [dbo].[searchpromotion]
@textbox varchar(50)
AS
SELECT  Код_поощрения, Сотрудник.Код_сотрудника, Мотив, Вид_поощрения, Сумма, Поощрение.Дата, Основание, Сотрудник.Имя, Сотрудник.Фамилия, Сотрудник.Отчество
FROM
Поощрение
join Сотрудник on Сотрудник.Код_сотрудника = Поощрение.Код_сотрудника
where Сотрудник.Фамилия LIKE '%'+@textbox+'%' or
Сотрудник.Имя LIKE '%'+@textbox+'%' or
Сотрудник.Отчество LIKE '%'+@textbox+'%'
GO

CREATE PROCEDURE [dbo].[searchfired]
@textbox varchar(50)
AS
SELECT  Код_увольнения, Увольнение.Дата, Имя, Фамилия, Отчество, Основание, Сотрудник.Код_сотрудника, Штатное_расписание.Код_штатного_расписания, Штатное_расписание.Название_должности, Отдел.Название_отдела
FROM
Увольнение
join Сотрудник on Сотрудник.Код_сотрудника = Увольнение.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Увольнение.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
where Сотрудник.Фамилия LIKE '%'+@textbox+'%' or
Сотрудник.Имя LIKE '%'+@textbox+'%' or
Сотрудник.Отчество LIKE '%'+@textbox+'%'
GO


CREATE PROCEDURE [dbo].[searorder]
@textbox varchar(50)
AS
SELECT  Трудовой_договор.Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_трудового_договора, Сотрудник.Код_сотрудника, Штатное_расписание.Код_штатного_расписания, Сотрудник.Имя,
Сотрудник.Фамилия, Сотрудник.Отчество, Отдел.Код_отдела, Отдел.Название_отдела, Штатное_расписание.Название_должности
FROM
Трудовой_договор
join Сотрудник on Сотрудник.Код_сотрудника = Трудовой_договор.Код_сотрудника
join Штатное_расписание on Штатное_расписание.Код_штатного_расписания = Трудовой_договор.Код_штатного_расписания
join Отдел on Отдел.Код_отдела = Штатное_расписание.Код_отдела
where Сотрудник.Фамилия LIKE '%'+@textbox+'%' or
Сотрудник.Имя LIKE '%'+@textbox+'%' or
Сотрудник.Отчество LIKE '%'+@textbox+'%'
GO



CREATE PROCEDURE ufn_FindReports 
@id int
AS    
    SET NOCOUNT ON;  
    SELECT (select SUM(DATEDIFF(YEAR, Место_предыдущей_работы.Устроился, Место_предыдущей_работы.Уволился)) from Место_предыдущей_работы where Код_сотрудника = @id)
    FROM Место_предыдущей_работы p		
    WHERE p.Код_сотрудника = @id  
	Group by Код_предыдущей_работы  
RETURN
GO  


CREATE PROCEDURE ufn_FindReports2
@id int
AS    
	declare @date date
    SET NOCOUNT ON;  
	set @date = (select top 1 Дата_окончания from Трудовой_договор where Трудовой_договор.Код_сотрудника = @id order by Трудовой_договор.Код_сотрудника desc)
	if(@date IS NOT NULL)
	begin
		SELECT (select SUM(DATEDIFF(YEAR, Трудовой_договор.Дата, Трудовой_договор.Дата_окончания)) from Трудовой_договор where Код_сотрудника = @id)
	end;
	else 
	begin
		SELECT (select SUM(DATEDIFF(YEAR, Трудовой_договор.Дата, GETDATE())) from Трудовой_договор where Код_сотрудника = @id)
	end;

RETURN
GO  


Insert into Специалист_по_кадрам(Фамилия, Имя, Логин, Пароль)
Values('Иванова', 'Татьяна', 'admin', 'admin')
go

Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Макаров', 'Леонид', 'Анатольевич', '19/03/1999', 'Мужской', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP3438432', '321089M064PB6', '19/03/2014', 'ФРУНЗЕНСКОЕ РУВД Г.МИНСКА', 'Минск', 'Сухаревская', '21', '3', 'Минск', 'Сухаревская', '21', '3', '+375294112323', 'Холост', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Тульский', 'Макар', 'Олегович', '12/12/1993', 'Мужской', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP3432432', '321089M144PB6', '01/02/2016', 'ФРУНЗЕНСКОЕ РУВД Г.МИНСКА', 'Минск', 'Гущенко', '87', '23', 'Минск', 'Гущенко', '87', '23', '+375294332319', 'Холост', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Шербаков', 'Юрий', 'Александрович', '11/06/1987', 'Мужской', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP3432498', '124089M144PB6', '09/08/2015', 'ЛЕНИНСКОЕ РУВД Г.МИНСКА', 'Минск', 'Дунеева', '19', '8', 'Минск', 'Дунеева', '19', '8', '+375294132223', 'Холост', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Зарипов', 'Леонид', 'Александрович', '11/06/1976', 'Мужской', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP3432214', '124023M142PB6', '02/02/2012', 'МОСКОВСКОЕ РУВД Г.МИНСКА', 'Минск', 'Щедрина', '29', '78', 'Минск', 'Щедрина', '29', '78', '+375292422343', 'Холост', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Лазарев', 'Юрий', 'Владимирович', '27/05/1987', 'Мужской', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP3433398', '124089M111PB2', '04/04/2017', 'ЛЕНИНСКОЕ РУВД Г.МИНСКА', 'Минск', 'Дунеева', '19', '8', 'Минск', 'Дунеева', '19', '8', '+375299332319', 'Холост', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Орлова', 'Анастасия', 'Петровна', '11/05/1992', 'Женский', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP3431238', '234089M144PB4', '09/08/2018', 'СОВЕТСКОЕ РУВД Г.МИНСКА', 'Минск', 'Шилова', '29', '18', 'Минск', 'Шилова', '29', '18', '+37529419922', 'Не замужем', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Дроздова', 'Маргарита', 'Витальевна', '13/02/1984', 'Женский', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP3221298', '125289M144PB6', '09/08/2016', 'ЗАВОДСКОЕ РУВД Г.МИНСКА', 'Минск', 'Сухаревская', '68', '32', 'Минск', 'Сухаревская', '68', '32', '+375254332319', 'Сотрудник', 'Кандидат', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Шишко', 'Александр', 'Владимирович', '11/06/1995', 'Мужской', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP1899498', '124089K122PB6', '02/03/2013', 'ЗАВОДСКОЕ РУВД Г.МИНСКА', 'Минск', 'Зарина', '22', '28', 'Минск', 'Зарина', '22', '28', '+375332232319', 'Холост', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Крупский', 'Юрий', 'Александрович', '11/06/1993', 'Мужской', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP3432221', '120132M144PB6', '09/08/2017', 'ФРУНЗЕНСКОЕ РУВД Г.МИНСКА', 'Минск', 'Зубарова', '30', '13', 'Минск', 'Зубарова', '30', '13', '+375254312919', 'Не замужем', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Омская', 'Людмила', 'Вячеславовна', '11/06/1997', 'Женский', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP3432397', '194989M144PB6', '01/08/2018', 'ЛЕНИНСКОЕ РУВД Г.МИНСКА', 'Минск', 'Прохина', '23', '23', 'Минск', 'Прохина', '23', '23', '+375334335619', 'Не замужем', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Лукина', 'Арина', 'Владимировна', '15/09/1992', 'Женский', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP3431999', '194999M944PB9', '07/07/2017', 'ФРУНЗЕНСКОЕ РУВД Г.МИНСКА', 'Минск', 'Сухаревская', '70', '13', 'Минск', 'Сухаревская', '70', '13', '+375259555619', 'Не замужем', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Захарова', 'Анастасия', 'Петровна', '11/06/1985', 'Женский', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP3122399', '194989P122PB6', '01/08/2017', 'ЛЕНИНСКОЕ РУВД Г.МИНСКА', 'Минск', 'Суворова', '19', '20', 'Минск', 'Суворова', '19', '20', '+375295565619', 'Не замужем', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Омельчук', 'Виктория', 'Вячеславовна', '11/06/1981', 'Женский', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP1289447', '194989O144PB6', '02/02/2016', 'СОВЕТСКОЕ РУВД Г.МИНСКА', 'Минск', 'Загирина', '43', '56', 'Минск', 'Загирина', '43', '56', '+375332445619', 'Не замужем', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Тульская', 'Мария', 'Олеговна', '11/06/1979', 'Женский', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP9984397', '192129O144PB6', '01/08/2017', 'МОСКОВСКОЕ РУВД Г.МИНСКА', 'Минск', 'Минина', '67', '98', 'Минск', 'Минина', '67', '98', '+375339455619', 'Не замужем', 'Сотрудник', 1)
Insert into Сотрудник(Фамилия, Имя, Отчество, Дата_рождения, Пол, Страна_рождения, Город_рождения, Гражданство, Серия_номер_паспорта, Идентификационный_номер, Дата_выдачи_паспорта, Кем_выдан_паспорт, Город_фактического_проживания, Улица_фактического_проживания, Дом_фактического_проживания, Квартира_фактического_проживания, Город_регистрации, Улица_регистрации, Дом_регистрации, Квартира_регистрации, Мобильный_телефон, Семейное_положение, Состояние, Код_специалиста_по_кадрам)
Values('Малюженец', 'Егор', 'Олегович', '09/12/2000', 'Мужской', 'Беларусь', 'Минск', 'Республика Беларусь', 'MP1232133', '192129O124IB6', '01/08/2017', 'ФРУНЗЕНСКОЕ РУВД Г.МИНСКА', 'Минск', 'Колесникова', '18', '28', 'Минск', 'Колесникова', '18', '28', '+375339998600', 'Холост', 'Сотрудник', 1)


go

Insert into Отдел(Название_отдела)
Values('Учебный'),
('Лаборатория'),
('Маркетинга'),
('Тестирования'),
('Учебно-методический'),
('По работе с клиентами'),
('Бухгалтерия')
go

Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Ректор', 1, 1, 700)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Первый проректор', 1, 1, 600)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Заведующий кафедрой ИТ и бизнес-администрирования', 1, 1, 500)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Руководитель центра изучения иностранных языков', 1, 1, 500)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Начальник лаборатории', 1, 2, 400)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Системный администратор', 1, 2, 300)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Руководитель отдела маркетинга', 1, 3, 400)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Специалист по маркетингу', 1, 3, 400)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Руководитель учебно-методического отдела', 1, 5, 400)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Заместитель начальника учебно-методической части', 1, 5, 300)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Главный бухгалтер', 1, 7, 400)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Начальник центра тестирования', 1, 4, 400)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Начальник отдела маркетинга', 1, 3, 400)
Insert into Штатное_расписание(Название_должности, Количество_сотрудников, Код_отдела, Оклад)
Values('Специалист по работе с клиентами', 1, 6, 300)



Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('23/02/2017', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 1, 'Действует', 1, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('25/06/2019', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 2, 'Действует', 2, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('27/09/2019', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 3, 'Действует', 3, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('23/02/2019', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 4, 'Действует', 4, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('22/02/2018', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 5, 'Действует', 5, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('21/02/2018', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 6, 'Действует', 6, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('02/02/2018', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 7, 'Действует', 7, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('09/02/2017', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 8, 'Действует', 8, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('23/02/2018', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 9, 'Действует', 9, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('15/03/2018', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 10, 'Действует', 10, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('12/02/2018', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 11, 'Действует', 11, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('23/04/2017', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 12, 'Действует', 12, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('15/06/2017', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 13, 'Действует', 13, 1.0)
Insert into Трудовой_договор(Дата, Вид_договора, Срок, Испытательный_срок, Испытательный_срок_с, Испытательный_срок_по, Код_сотрудника, Состояние, Код_штатного_расписания, Ставка)
Values('23/02/2018', 'Трудовой договор по основной работе', 'На неопределенный срок', 'Без испытания', null, null, 14, 'Действует', 14, 1.0)
go




Insert into Отпуск(Вид_отпуска, За_период_с, За_период_по, Отпуск_с, Количество_дней_отпуска, Основание_на_отпуск, Примечание, Код_сотрудника, Дата)
Values('Трудовой', '01/02/2018', '01/02/2019', '22/02/2019', 26, 'Приказ', 'Трудовой отпуск', 2, '20/02/2019')
go
Insert into Отпуск(Вид_отпуска, За_период_с, За_период_по, Отпуск_с, Количество_дней_отпуска, Основание_на_отпуск, Примечание, Код_сотрудника, Дата)
Values('Трудовой', '01/02/2019', '01/02/2020', '22/02/2020', 24, 'Приказ', 'Трудовой отпуск', 3, '20/02/2020')
go
Insert into Отпуск(Вид_отпуска, За_период_с, За_период_по, Отпуск_с, Количество_дней_отпуска, Основание_на_отпуск, Примечание, Код_сотрудника, Дата)
Values('Трудовой', '01/02/2018', '01/02/2019', '22/02/2019', 26, 'Приказ', 'Трудовой отпуск', 4, '20/02/2019')
go
Insert into Отпуск(Вид_отпуска, За_период_с, За_период_по, Отпуск_с, Количество_дней_отпуска, Основание_на_отпуск, Примечание, Код_сотрудника, Дата)
Values('Трудовой', '01/02/2018', '01/02/2019', '22/02/2019', 24, 'Приказ', 'Трудовой отпуск', 5, '20/02/2019')
go
Insert into Отпуск(Вид_отпуска, За_период_с, За_период_по, Отпуск_с, Количество_дней_отпуска, Основание_на_отпуск, Примечание, Код_сотрудника, Дата)
Values('Трудовой', '01/02/2018', '01/02/2019', '22/02/2019', 28, 'Приказ', 'Трудовой отпуск', 6, '20/02/2019')
go
Insert into Отпуск(Вид_отпуска, За_период_с, За_период_по, Отпуск_с, Количество_дней_отпуска, Основание_на_отпуск, Примечание, Код_сотрудника, Дата)
Values('Трудовой', '01/02/2018', '01/02/2019', '22/02/2019', 25, 'Приказ', 'Трудовой отпуск', 7, '20/02/2019')
go
Insert into Отпуск(Вид_отпуска, За_период_с, За_период_по, Отпуск_с, Количество_дней_отпуска, Основание_на_отпуск, Примечание, Код_сотрудника, Дата)
Values('Трудовой', '01/02/2018', '01/02/2019', '22/02/2019', 26, 'Приказ', 'Трудовой отпуск', 8, '20/02/2019')
go


Insert into Командировка(Страна, Область, Город, Дата_с, Срок, Цель, Основание, Код_сотрудника, Дата)
Values('Беларусь', 'Витебская', 'Витебск', '22/02/2019', 7, 'Встреча с партнерами', 'Приказ', 1, '20/02/2019')
go
Insert into Командировка(Страна, Область, Город, Дата_с, Срок, Цель, Основание, Код_сотрудника, Дата)
Values('Беларусь', 'Гомельская', 'Гомель', '18/05/2019', 9, 'Встреча с партнерами', 'Приказ', 2, '15/05/2019')
go
Insert into Командировка(Страна, Область, Город, Дата_с, Срок, Цель, Основание, Код_сотрудника, Дата)
Values('Беларусь', 'Витебская', 'Витебск', '22/02/2019', 7, 'Встреча с партнерами', 'Приказ', 9, '20/02/2019')
go
Insert into Командировка(Страна, Область, Город, Дата_с, Срок, Цель, Основание, Код_сотрудника, Дата)
Values('Беларусь', 'Витебская', 'Витебск', '22/02/2019', 7, 'Встреча с партнерами', 'Приказ', 10, '20/02/2019')
go
Insert into Командировка(Страна, Область, Город, Дата_с, Срок, Цель, Основание, Код_сотрудника, Дата)
Values('Минская', 'Минск', 'Витебск', '22/02/2019', 7, 'Встреча с партнерами', 'Приказ', 11, '20/02/2019')
go
Insert into Командировка(Страна, Область, Город, Дата_с, Срок, Цель, Основание, Код_сотрудника, Дата)
Values('Беларусь', 'Витебская', 'Витебск', '22/02/2019', 7, 'Встреча с партнерами', 'Приказ', 12, '20/02/2019')
go
Insert into Командировка(Страна, Область, Город, Дата_с, Срок, Цель, Основание, Код_сотрудника, Дата)
Values('Беларусь', 'Витебская', 'Витебск', '22/02/2019', 7, 'Встреча с партнерами', 'Приказ', 13, '20/02/2019')
go

Insert into Перевод(Дата, Перевод_с, Основание, Код_штатного_расписания, Код_сотрудника)
Values('20/05/2019', '15/05/2019', 'Приказ', 5, 6)
Insert into Перевод(Дата, Перевод_с, Основание, Код_штатного_расписания, Код_сотрудника)
Values('20/05/2019', '15/05/2019', 'Приказ', 6, 9)
Insert into Перевод(Дата, Перевод_с, Основание, Код_штатного_расписания, Код_сотрудника)
Values('20/05/2019', '15/05/2019', 'Приказ', 7, 10)
go

Insert into Поощрение(Мотив, Вид_поощрения, Сумма, Дата, Основание, Код_сотрудника)
Values('За добросовестный труд', 'Выдача премии', 80, '25/04/2020', 'Приказ', 5)
Insert into Поощрение(Мотив, Вид_поощрения, Сумма, Дата, Основание, Код_сотрудника)
Values('За добросовестный труд', 'Выдача премии', 120, '25/02/2020', 'Приказ', 6)
Insert into Поощрение(Мотив, Вид_поощрения, Сумма, Дата, Основание, Код_сотрудника)
Values('За добросовестный труд', 'Выдача премии', 150, '25/02/2019', 'Приказ', 7)
Insert into Поощрение(Мотив, Вид_поощрения, Сумма, Дата, Основание, Код_сотрудника)
Values('За добросовестный труд', 'Выдача премии', 50, '05/04/2020', 'Приказ', 8)
go

Insert into Степень_родства(Степень_родства)
Values('Брат'),
('Сын'),
('Дочь'),
('Сестра'),
('Мама'),
('Папа')
go

Insert into Образование(Образовательное_учреждение, Дата_окончания, Система_образования, Номер_диплома, Дата_выдачи, Специальность_по_образованию, Квалификация_по_диплому, Код_сотрудника)
Values('Белорусский государственный университет', '09/06/2018', 'Высшее', '2321321', '25/06/2018', 'Программист', 'Техник-программист', 15)
Insert into Образование(Образовательное_учреждение, Дата_окончания, Система_образования, Номер_диплома, Дата_выдачи, Специальность_по_образованию, Квалификация_по_диплому, Код_сотрудника)
Values('Колледж бизнеса и права', '26/06/2019', 'Среднее специальное', '2921322', '03/07/2019', 'Программист', 'Техник-программист', 15)
Insert into Образование(Образовательное_учреждение, Дата_окончания, Система_образования, Номер_диплома, Дата_выдачи, Специальность_по_образованию, Квалификация_по_диплому, Код_сотрудника)
Values('Минский государственный профессионально-технический колледж', '25/06/2018', 'Профессионально-техническое ', '9321991', '25/06/2018', 'Экономическое', 'Экономист', 14)
Insert into Образование(Образовательное_учреждение, Дата_окончания, Система_образования, Номер_диплома, Дата_выдачи, Специальность_по_образованию, Квалификация_по_диплому, Код_сотрудника)
Values('Белорусский государственный университет', '09/06/2017', 'Высшее', '1323321', '25/06/2017', 'Программист', 'Техник-программист', 13)
Insert into Образование(Образовательное_учреждение, Дата_окончания, Система_образования, Номер_диплома, Дата_выдачи, Специальность_по_образованию, Квалификация_по_диплому, Код_сотрудника)
Values('Белорусский государственный университет', '09/06/2019', 'Высшее', '1669021', '25/06/2019', 'Программист', 'Техник-программист', 12)
go

Insert into Состав_семьи(Фамилия, Имя, Отчество, Дата_рождения, Код_сотрудника, Код_степени_родства)
Values('Малюженец', 'Василий', 'Петрович', '09/09/2005', 15, 1)
Insert into Состав_семьи(Фамилия, Имя, Отчество, Дата_рождения, Код_сотрудника, Код_степени_родства)
Values('Малюженец', 'Мария', 'Петровна', '03/04/2000', 15, 4)
Insert into Состав_семьи(Фамилия, Имя, Отчество, Дата_рождения, Код_сотрудника, Код_степени_родства)
Values('Макарова', 'Мария', 'Петровна', '03/04/2006', 14, 4)
Insert into Состав_семьи(Фамилия, Имя, Отчество, Дата_рождения, Код_сотрудника, Код_степени_родства)
Values('Захаров', 'Леонид', 'Александрович', '03/04/1998', 13, 1)
Insert into Состав_семьи(Фамилия, Имя, Отчество, Дата_рождения, Код_сотрудника, Код_степени_родства)
Values('Ширяев', 'Виктор', 'Олегович', '03/04/1994', 15, 1)
go

Insert into Место_предыдущей_работы(Устроился, Уволился, Вид_деятельности, Основание_увольнения, Должность, Организация, Код_сотрудника)
Values('03/04/2019', '06/06/2019', 'Настройка программного обеспечения', 'По собственному желанию', 'Системный администратор', 'ОАО "Экострой"', 15)
Insert into Место_предыдущей_работы(Устроился, Уволился, Вид_деятельности, Основание_увольнения, Должность, Организация, Код_сотрудника)
Values('03/04/2017', '06/06/2019', 'Настройка программного обеспечения', 'По собственному желанию', 'Системный администратор', 'ОАО "Белтао"', 15)
Insert into Место_предыдущей_работы(Устроился, Уволился, Вид_деятельности, Основание_увольнения, Должность, Организация, Код_сотрудника)
Values('03/04/2016', '06/06/2017', 'Настройка программного обеспечения', 'По собственному желанию', 'Системный администратор', 'ОАО "Щирио"', 14)
Insert into Место_предыдущей_работы(Устроился, Уволился, Вид_деятельности, Основание_увольнения, Должность, Организация, Код_сотрудника)
Values('03/04/2012', '06/06/2014', 'Настройка программного обеспечения', 'По собственному желанию', 'Системный администратор', 'ИП "Лукин"', 15)
Insert into Место_предыдущей_работы(Устроился, Уволился, Вид_деятельности, Основание_увольнения, Должность, Организация, Код_сотрудника)
Values('03/04/2014', '06/06/2016', 'Настройка программного обеспечения', 'По собственному желанию', 'Системный администратор', 'ОАО "Заод"', 14)
Insert into Место_предыдущей_работы(Устроился, Уволился, Вид_деятельности, Основание_увольнения, Должность, Организация, Код_сотрудника)
Values('03/04/2019', '06/06/2019', 'Настройка программного обеспечения', 'По собственному желанию', 'Системный администратор', 'ОАО "Филитек"', 13)
go



